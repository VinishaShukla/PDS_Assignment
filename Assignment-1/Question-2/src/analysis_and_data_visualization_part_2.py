# -*- coding: utf-8 -*-
"""analysis and data visualization -part-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VAlnb4t0uDLFUeZ2_PMj-lNW8HnlYuiw
"""

# Importing necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Reading the CSV file
student_data = pd.read_csv("/content/clean_StudentsData.csv")

# Getting the info of complete csv
print(student_data.info())

# Removing the 'X' column
student_data.to_csv("/content/clean_StudentsData.csv", index=False)

# Understanding the data and dimensions
print(student_data.columns)
print(student_data.shape)

# Getting the top rows
print(student_data.head())
print(student_data.describe())

# Plotting the Graphs- Visualize the data using different techniques

# 1. Plotting frequency of each category in the "race/ethnicity" feature
sns.countplot(y='race/ethnicity', data=student_data, palette='BuPu')
plt.title("Data Based On Race Ethnicity")
plt.xlabel("Frequency")
plt.ylabel("Race Ethnicity")
plt.show()

#2. Boxplots of Math, Reading, and Writing Scores
plt.figure(figsize=(12, 6))
plt.subplot(1, 3, 1)
sns.boxplot(x='math score', data=student_data, palette='Blues')
plt.title("Distribution of Math Scores")

plt.subplot(1, 3, 2)
sns.boxplot(x='reading score', data=student_data, palette='Greens')
plt.title("Distribution of Reading Scores")

plt.subplot(1, 3, 3)
sns.boxplot(x='writing score', data=student_data, palette='Reds')
plt.title("Distribution of Writing Scores")

plt.tight_layout()
plt.show()

# 3. Scatter plot of Math Score vs Reading Score with color indicating Gender
sns.scatterplot(x='math score', y='reading score', hue='gender', data=student_data, palette={'male': 'blue', 'female': 'purple'})
plt.title("Correlation Math Score & Reading Score")
plt.xlabel("Math Score")
plt.ylabel("Reading Score")
plt.show()


# 4. Comparison of Female and Male Students' Race Ethnicity
plt.figure(figsize=(8, 6))
sns.countplot(y='race/ethnicity', hue='gender', data=student_data, palette='viridis')
plt.title("Comparison of Female and Male Students")
plt.xlabel("Count")
plt.ylabel("Race Ethnicity")
plt.show()


#5. Plotting the pie chart
race_counts = student_data['race/ethnicity'].value_counts()
plt.figure(figsize=(8, 8))
plt.pie(race_counts, labels=race_counts.index, autopct='%1.1f%%', startangle=140, colors=plt.cm.tab10.colors)
plt.title('Distribution of Students by Race/Ethnicity')
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.show()

# 6. Bar plot showing average math, reading, and writing scores based on parental level of education
plt.figure(figsize=(10, 6))
sns.barplot(x='parental level of education', y='math score', data=student_data, palette='Blues')
plt.title("Average Math Score by Parental Level of Education")
plt.xlabel("Parental Level of Education")
plt.ylabel("Average Math Score")
plt.xticks(rotation=45, ha='right')
plt.show()

plt.figure(figsize=(10, 6))
sns.barplot(x='parental level of education', y='reading score', data=student_data, palette='Greens')
plt.title("Average Reading Score by Parental Level of Education")
plt.xlabel("Parental Level of Education")
plt.ylabel("Average Reading Score")
plt.xticks(rotation=45, ha='right')
plt.show()

plt.figure(figsize=(10, 6))
sns.barplot(x='parental level of education', y='writing score', data=student_data, palette='Reds')
plt.title("Average Writing Score by Parental Level of Education")
plt.xlabel("Parental Level of Education")
plt.ylabel("Average Writing Score")
plt.xticks(rotation=45, ha='right')
plt.show()

#7. Plotting the pair plots
sns.pairplot(student_data, hue='gender', palette='husl')
plt.suptitle("Pair Plot of Student Performance Data", y=1.02)
plt.show()